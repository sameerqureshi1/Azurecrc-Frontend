name: Create Azure Storage (sameercv)

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  create-storage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Ensure Resource Group exists
        run: |
          az group create \
            --name "${{ secrets.AZURE_RESOURCE_GROUP }}" \
            --location "${{ secrets.AZURE_LOCATION }}"

      - name: Create Storage Account if not exists
        run: |
          STORAGE_NAME="${{ secrets.STORAGE_ACCOUNT_NAME }}"
          RG="${{ secrets.AZURE_RESOURCE_GROUP }}"
          LOCATION="${{ secrets.AZURE_LOCATION }}"

          if az storage account check-name --name "$STORAGE_NAME" --query "nameAvailable" -o tsv | grep -q true; then
            echo "Creating storage account $STORAGE_NAME..."
            az storage account create \
              --name "$STORAGE_NAME" \
              --resource-group "$RG" \
              --location "$LOCATION" \
              --sku Standard_LRS \
              --kind StorageV2 \
              --access-tier Hot
          else
            echo "Storage account $STORAGE_NAME already exists or name unavailable."
          fi

      - name: Get Storage Account Key
        id: key
        run: |
          KEY=$(az storage account keys list \
            --account-name "${{ secrets.STORAGE_ACCOUNT_NAME }}" \
            --resource-group "${{ secrets.AZURE_RESOURCE_GROUP }}" \
            --query "[0].value" -o tsv)
          echo "::add-mask::$KEY"
          echo "key=$KEY" >> $GITHUB_OUTPUT

      - name: Create Blob Container
        run: |
          az storage container create \
            --name "${{ secrets.CONTAINER_NAME }}" \
            --account-name "${{ secrets.STORAGE_ACCOUNT_NAME }}" \
            --account-key "${{ steps.key.outputs.key }}" \
            --public-access off

      - name: Show Storage Details
        run: |
          az storage account show \
            --name "${{ secrets.STORAGE_ACCOUNT_NAME }}" \
            --resource-group "${{ secrets.AZURE_RESOURCE_GROUP }}" \
            --output table
